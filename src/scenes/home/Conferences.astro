---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import { YouTube } from 'astro-embed';
import { Icon } from 'astro-icon/components';

import { pipe, sortWith } from 'mochila-ts';
import { cva } from '@/utils/cva';

import { useTranslations, getLangFromUrl } from '@/utils/i18n';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const rawConferences = pipe(
  sortWith<CollectionEntry<'conferences'>>((a, b) => b.data.weight - a.data.weight),
)(await getCollection('conferences'));

const conferences = await Promise.all(
  rawConferences.map(async ({ data, render }) => ({
    ...data,
    rendered: await render(),
  })),
);

const article = cva({
  base: 'rounded-md border border-slate-200 bg-slate-50 ~p-4/6 dark:border-slate-800 dark:bg-slate-950 flex flex-col',
  variants: {
    large: {
      true: 'row-span-2',
      false: 'row-span-1',
    },
  },
});
---

{
  conferences.map((conference) => (
    <article
      class={article({
        large: Boolean(conference.youtube),
      })}
    >
      {conference.youtube && (
        <div class="print-hidden mb-4">
          <YouTube id={conference.youtube} title={conference.title} posterQuality="high" />
        </div>
      )}
      <h3 class="mt-2 font-semibold text-slate-900 dark:text-slate-200">{conference.title}</h3>
      <p class="mt-1 text-slate-700 transition-colors hover:text-slate-900 dark:text-slate-400 dark:hover:text-slate-200">
        {conference.for.href ? (
          <a
            class="underline decoration-slate-600 underline-offset-4 dark:decoration-slate-600"
            href={conference.for.href}
            target="_blank"
            rel="noopener noreferrer"
          >
            {conference.for.title}
          </a>
        ) : (
          conference.title
        )}
      </p>
      <div class="mt-auto flex flex-wrap items-center gap-3 pt-6 text-sm font-medium text-slate-500 dark:text-slate-300">
        <p
          class={`${conference.type === 'talk' ? 'text-cyan-600 dark:text-cyan-300' : 'text-indigo-600 dark:text-indigo-300'}`}
        >
          {t(`conferences:${conference.type}`)}
        </p>
        <p class="flex items-center gap-0.5">
          <Icon name="ri:calendar-line" class="size-5" /> {conference.year}
        </p>
        <p class="flex items-center gap-0.5">
          <Icon name="ri:speak-line" class="-mt-0.5 size-5" /> {t(`common:${conference.language}`)}
        </p>
        <p class="flex items-center gap-0.5">
          <Icon name="ri:compass-line" class="size-5" />
          {!conference.place ? (
            'Online'
          ) : (
            <a
              class="underline decoration-slate-300 underline-offset-4 transition-colors hover:text-cyan-600 dark:text-slate-300 dark:decoration-slate-400 dark:hover:text-slate-200"
              href={`https://www.google.com/maps/place/${conference.place}`}
              target="_blank"
              rel="noopener noreferrer"
            >
              {conference.place}
            </a>
          )}
        </p>
      </div>
    </article>
  ))
}
