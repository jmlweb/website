---
import { getImage } from 'astro:assets';
import { ViewTransitions } from 'astro:transitions';

import '@/base.css';
import Logo from '@/components/Logo.astro';
import ThemeToggler from './ThemeToggler.astro';
import { container } from '@/styles';
import { useTranslations, getLangFromUrl } from '@/utils/i18n';
import UmamiScript from './UmamiScript.astro';
import SimpleTooltip from '@/components/SimpleTooltip/SimpleTooltip.astro';
import pictureSrc from '@/images/looking-down.png';

interface Props {
  title?: string;
}

const { title } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const translationLink =
  lang === 'en'
    ? {
        href: '/',
        text: 'Español',
      }
    : {
        href: '/en',
        text: 'English',
      };

const { src: ogImage } = await getImage({ src: pictureSrc, height: 627 });
---

<!doctype html>
<html lang={lang} class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="José Manuel Lucas | Frontend, TypeScript, CSS, Next.js" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="google-site-verification" content="C_zrk0we724IL2r6BSTEf2U9ZVaIIYVsFR16eHuk-Nk" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title ?? 'José Manuel Lucas'}</title>
    <UmamiScript />
    <link rel="“alternate”" hreflang="es" href="http://jmlweb.es" />
    <link rel="“alternate”" hreflang="en" href="http://jmlweb.es/en" />
    <link href="/sitemap-index.xml" rel="sitemap" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:url" content={Astro.url.href} />
    <meta property="og:image" content={`${Astro.site?.protocol}//${Astro.site?.host}${ogImage}`} />
    <meta
      property="og:description"
      content="José Manuel Lucas | Frontend, TypeScript, CSS, Next.js"
    />
    <noscript>
      <style>
        .js-only {
          display: none !important;
        }
      </style>
    </noscript>
    <ViewTransitions />
  </head>
  <body
    class="optimize-legibility grid min-h-screen grid-rows-[auto_1fr_auto] overflow-y-auto overflow-x-hidden scroll-smooth bg-gradient-to-b from-slate-50 to-slate-100 font-sans text-slate-800/90 antialiased dark:from-slate-900 dark:to-slate-950 dark:text-slate-300/75"
  >
    <div class="print-hidden border-b border-slate-300 dark:border-slate-800">
      <header
        class={container({
          class: 'flex items-center justify-between ~py-3/5',
        })}
      >
        <Logo color="reactive" />
        <nav class="flex items-center ~gap-6/8">
          <a
            class="text-base text-slate-600 hover:text-slate-800 dark:text-slate-400 dark:hover:text-slate-200"
            data-astro-prefetch
            data-umami-event="Translate"
            data-umami-event-language={translationLink.text}
            href={translationLink.href}>{translationLink.text}</a
          >
          <ThemeToggler />
        </nav>
      </header>
    </div>
    <main class="flex flex-col">
      <slot />
    </main>
    <footer class="~mt-12/16 ~py-6/8">
      <div class={container()}>
        <p>
          <span class="font-medium">José Manuel Lucas</span>
          <span class="text-slate-500">/ Murcia ({t('common:spain')})</span>
        </p>
      </div>
    </footer>
    <SimpleTooltip />
  </body>
</html>

<script is:inline>
  const isDarkMode =
    localStorage.getItem('theme') === 'dark' ||
    (!('theme' in localStorage) && !window.matchMedia('(prefers-color-scheme: light)').matches);
  document.documentElement.classList.toggle('dark', isDarkMode);
</script>

<script src="./theme.ts"></script>
